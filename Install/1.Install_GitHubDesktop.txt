
ここでは、GitHubを使ってみたいが「そもそもよくわからない」「開発環境（VS Code）との連携方法が不明」
といった課題に対応するため、導入手順を記録する。

なお、この手順自体もGit機能によってGitHubへアップロードされており、
「手順」と「その活用例」を兼ねたサンプルとして活用していただければ幸いである。

まずはじめに、GitHub Desktop（通常のWindowsアプリのように使えるGUIツール）のインストールから行う。
インストール後はGitHub Desktopを利用し、VS Codeとの連携設定を進める。

また、この手順はChatGPTと連携しながら作成されているため、
もし途中でつまずいた場合は、**ChatGPTへエラーメッセージや状況を伝えることで問題を解決できる可能性が高い**。
なお、公開から時間が経過することで手順が変更されることもあるため、そうした場合にもChatGPTの活用を推奨する。

---

### 🔍 そもそもGitHubとは？

ソースコードの作成時には、変更の履歴や修正内容を管理する「バージョン管理」が推奨される。
しかし手動で管理しようとすると、ファイル数が膨大になったり、誰がどこを修正したか分からなくなったりするなど、
混乱やトラブルの原因になることが多い。

これを解消するために生まれたのが、**Git**という差分記録システムである。
そして、Gitで管理されたデータを**インターネット上で共有・公開できるサービス**が、**GitHub**をはじめとする「リポジトリ管理サイト」である。

---

## 🛠 導入手順

---

### 1. GitHub Desktopのインストール

1. [https://desktop.github.com](https://desktop.github.com) にアクセスする
2. 「Download now」をクリック
3. 「Download for Windows（64-bit）」をクリック
4. `GitHubDesktopSetup-x64.exe` を任意のフォルダに保存する
5. `.exe` ファイルをダブルクリックして実行する

   * 実行前に警告が出る場合があるが、一般的な `.exe` ファイルと同様に扱えば問題ない
6. インストールが始まるので、完了まで待機する
7. インストール完了後、GitHub Desktopが自動起動し「Welcome to GitHub Desktop」の画面が表示される

---

### 2. GitHubアカウントの作成と連携

1. 「Create your free account」をクリック
2. ブラウザが開き、GitHubの新規登録画面が表示される
3. アカウント情報を入力し、パズル認証で人間であることを証明する
4. 登録したメールアドレスに認証コードが届くため、画面に入力する
5. アカウント作成が完了し、ブラウザ上でGitHubにサインインした状態になる
6. アプリ側で「Sign in to GitHub.com」をクリックし、同様にログインする
7. 「Authorize GitHub Desktop」をクリックして連携を承認する
8. ブラウザから「GitHub Desktopで開きますか？」と表示されるので、許可する
9. アプリ側に戻り、「Use my GitHub account name and email address」を選択し、「Finish」をクリック（＝初回コミットの準備）

   * ※この初回コミットは、Gitによる履歴管理を開始する起点となる
10. 「Let’s get started」の画面が表示され、初期設定完了

---

## ✅ 作業完了

これで、GitHub Desktopの導入・GitHubアカウント連携が完了した状態になる。
このあと、VS Codeとの連携を行えば、開発環境とGitHubの統合がよりスムーズになる。
